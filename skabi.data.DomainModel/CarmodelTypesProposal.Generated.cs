//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace skabi.data.DomainModel
{
    public partial class CarmodelTypesProposal
    {
        #region Primitive Properties
    
        public virtual int CarmodelTypeProposalID
        {
            get;
            set;
        }
    
        public virtual int CarmodelTypeID
        {
            get { return _carmodelTypeID; }
            set
            {
                if (_carmodelTypeID != value)
                {
                    if (CarmodelType != null && CarmodelType.CarmodelTypeID != value)
                    {
                        CarmodelType = null;
                    }
                    _carmodelTypeID = value;
                }
            }
        }
        private int _carmodelTypeID;
    
        public virtual int ProposalID
        {
            get { return _proposalID; }
            set
            {
                if (_proposalID != value)
                {
                    if (Proposal != null && Proposal.ProposalID != value)
                    {
                        Proposal = null;
                    }
                    _proposalID = value;
                }
            }
        }
        private int _proposalID;

        #endregion

        #region Navigation Properties
    
        public virtual CarmodelType CarmodelType
        {
            get { return _carmodelType; }
            set
            {
                if (!ReferenceEquals(_carmodelType, value))
                {
                    var previousValue = _carmodelType;
                    _carmodelType = value;
                    FixupCarmodelType(previousValue);
                }
            }
        }
        private CarmodelType _carmodelType;
    
        public virtual Proposal Proposal
        {
            get { return _proposal; }
            set
            {
                if (!ReferenceEquals(_proposal, value))
                {
                    var previousValue = _proposal;
                    _proposal = value;
                    FixupProposal(previousValue);
                }
            }
        }
        private Proposal _proposal;

        #endregion

        #region Association Fixup
    
        private void FixupCarmodelType(CarmodelType previousValue)
        {
            if (previousValue != null && previousValue.CarmodelTypesProposals.Contains(this))
            {
                previousValue.CarmodelTypesProposals.Remove(this);
            }
    
            if (CarmodelType != null)
            {
                if (!CarmodelType.CarmodelTypesProposals.Contains(this))
                {
                    CarmodelType.CarmodelTypesProposals.Add(this);
                }
                if (CarmodelTypeID != CarmodelType.CarmodelTypeID)
                {
                    CarmodelTypeID = CarmodelType.CarmodelTypeID;
                }
            }
        }
    
        private void FixupProposal(Proposal previousValue)
        {
            if (previousValue != null && previousValue.CarmodelTypesProposals.Contains(this))
            {
                previousValue.CarmodelTypesProposals.Remove(this);
            }
    
            if (Proposal != null)
            {
                if (!Proposal.CarmodelTypesProposals.Contains(this))
                {
                    Proposal.CarmodelTypesProposals.Add(this);
                }
                if (ProposalID != Proposal.ProposalID)
                {
                    ProposalID = Proposal.ProposalID;
                }
            }
        }

        #endregion

    }
}
