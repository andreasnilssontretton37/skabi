//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_Carmodels_Carbrands", "Carbrand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Carbrand), "Carmodel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.Carmodel), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_CarmodelType_Carmodel", "Carmodel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Carmodel), "CarmodelType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.CarmodelType), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_CarmodelTypesProposal_CarmodelType", "CarmodelType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.CarmodelType), "CarmodelTypesProposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.CarmodelTypesProposal), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_CarmodelTypesProposals_Proposal", "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Proposal), "CarmodelTypesProposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.CarmodelTypesProposal), true)]

#endregion

namespace skabi.data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class rpdbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new rpdbEntities object using the connection string found in the 'rpdbEntities' section of the application configuration file.
        /// </summary>
        public rpdbEntities() : base("name=rpdbEntities", "rpdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new rpdbEntities object.
        /// </summary>
        public rpdbEntities(string connectionString) : base(connectionString, "rpdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new rpdbEntities object.
        /// </summary>
        public rpdbEntities(EntityConnection connection) : base(connection, "rpdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carbrand> Carbrands
        {
            get
            {
                if ((_Carbrands == null))
                {
                    _Carbrands = base.CreateObjectSet<Carbrand>("Carbrands");
                }
                return _Carbrands;
            }
        }
        private ObjectSet<Carbrand> _Carbrands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carmodel> Carmodels
        {
            get
            {
                if ((_Carmodels == null))
                {
                    _Carmodels = base.CreateObjectSet<Carmodel>("Carmodels");
                }
                return _Carmodels;
            }
        }
        private ObjectSet<Carmodel> _Carmodels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarmodelType> CarmodelTypes
        {
            get
            {
                if ((_CarmodelTypes == null))
                {
                    _CarmodelTypes = base.CreateObjectSet<CarmodelType>("CarmodelTypes");
                }
                return _CarmodelTypes;
            }
        }
        private ObjectSet<CarmodelType> _CarmodelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarmodelTypesProposal> CarmodelTypesProposals
        {
            get
            {
                if ((_CarmodelTypesProposals == null))
                {
                    _CarmodelTypesProposals = base.CreateObjectSet<CarmodelTypesProposal>("CarmodelTypesProposals");
                }
                return _CarmodelTypesProposals;
            }
        }
        private ObjectSet<CarmodelTypesProposal> _CarmodelTypesProposals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Layout> Layouts
        {
            get
            {
                if ((_Layouts == null))
                {
                    _Layouts = base.CreateObjectSet<Layout>("Layouts");
                }
                return _Layouts;
            }
        }
        private ObjectSet<Layout> _Layouts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Proposal> Proposals
        {
            get
            {
                if ((_Proposals == null))
                {
                    _Proposals = base.CreateObjectSet<Proposal>("Proposals");
                }
                return _Proposals;
            }
        }
        private ObjectSet<Proposal> _Proposals;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carbrands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarbrands(Carbrand carbrand)
        {
            base.AddObject("Carbrands", carbrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carmodels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarmodels(Carmodel carmodel)
        {
            base.AddObject("Carmodels", carmodel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarmodelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarmodelTypes(CarmodelType carmodelType)
        {
            base.AddObject("CarmodelTypes", carmodelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarmodelTypesProposals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarmodelTypesProposals(CarmodelTypesProposal carmodelTypesProposal)
        {
            base.AddObject("CarmodelTypesProposals", carmodelTypesProposal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Layouts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLayouts(Layout layout)
        {
            base.AddObject("Layouts", layout);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Proposals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposals(Proposal proposal)
        {
            base.AddObject("Proposals", proposal);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Carbrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carbrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carbrand object.
        /// </summary>
        /// <param name="carbrandID">Initial value of the CarbrandID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="clicks">Initial value of the Clicks property.</param>
        public static Carbrand CreateCarbrand(global::System.Int32 carbrandID, global::System.String name, global::System.Int32 clicks)
        {
            Carbrand carbrand = new Carbrand();
            carbrand.CarbrandID = carbrandID;
            carbrand.Name = name;
            carbrand.Clicks = clicks;
            return carbrand;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarbrandID
        {
            get
            {
                return _CarbrandID;
            }
            set
            {
                if (_CarbrandID != value)
                {
                    OnCarbrandIDChanging(value);
                    ReportPropertyChanging("CarbrandID");
                    _CarbrandID = StructuralObject.SetValidValue(value, "CarbrandID");
                    ReportPropertyChanged("CarbrandID");
                    OnCarbrandIDChanged();
                }
            }
        }
        private global::System.Int32 _CarbrandID;
        partial void OnCarbrandIDChanging(global::System.Int32 value);
        partial void OnCarbrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value, "Clicks");
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_Carmodels_Carbrands", "Carmodel")]
        public EntityCollection<Carmodel> Carmodels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carmodel>("skabi.data.Models.FK_Carmodels_Carbrands", "Carmodel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carmodel>("skabi.data.Models.FK_Carmodels_Carbrands", "Carmodel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Carmodel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carmodel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carmodel object.
        /// </summary>
        /// <param name="carmodelID">Initial value of the CarmodelID property.</param>
        /// <param name="carbrandID">Initial value of the CarbrandID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="clicks">Initial value of the Clicks property.</param>
        public static Carmodel CreateCarmodel(global::System.Int32 carmodelID, global::System.Int32 carbrandID, global::System.String name, global::System.Int32 clicks)
        {
            Carmodel carmodel = new Carmodel();
            carmodel.CarmodelID = carmodelID;
            carmodel.CarbrandID = carbrandID;
            carmodel.Name = name;
            carmodel.Clicks = clicks;
            return carmodel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarmodelID
        {
            get
            {
                return _CarmodelID;
            }
            set
            {
                if (_CarmodelID != value)
                {
                    OnCarmodelIDChanging(value);
                    ReportPropertyChanging("CarmodelID");
                    _CarmodelID = StructuralObject.SetValidValue(value, "CarmodelID");
                    ReportPropertyChanged("CarmodelID");
                    OnCarmodelIDChanged();
                }
            }
        }
        private global::System.Int32 _CarmodelID;
        partial void OnCarmodelIDChanging(global::System.Int32 value);
        partial void OnCarmodelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarbrandID
        {
            get
            {
                return _CarbrandID;
            }
            set
            {
                OnCarbrandIDChanging(value);
                ReportPropertyChanging("CarbrandID");
                _CarbrandID = StructuralObject.SetValidValue(value, "CarbrandID");
                ReportPropertyChanged("CarbrandID");
                OnCarbrandIDChanged();
            }
        }
        private global::System.Int32 _CarbrandID;
        partial void OnCarbrandIDChanging(global::System.Int32 value);
        partial void OnCarbrandIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value, "Clicks");
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_Carmodels_Carbrands", "Carbrand")]
        public Carbrand Carbrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_Carmodels_Carbrands", "Carbrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_Carmodels_Carbrands", "Carbrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carbrand> CarbrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_Carmodels_Carbrands", "Carbrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carbrand>("skabi.data.Models.FK_Carmodels_Carbrands", "Carbrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_CarmodelType_Carmodel", "CarmodelType")]
        public EntityCollection<CarmodelType> CarmodelTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarmodelType>("skabi.data.Models.FK_CarmodelType_Carmodel", "CarmodelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarmodelType>("skabi.data.Models.FK_CarmodelType_Carmodel", "CarmodelType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="CarmodelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarmodelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarmodelType object.
        /// </summary>
        /// <param name="carmodelTypeID">Initial value of the CarmodelTypeID property.</param>
        /// <param name="carmodelID">Initial value of the CarmodelID property.</param>
        /// <param name="wheelbase">Initial value of the Wheelbase property.</param>
        /// <param name="cubic">Initial value of the Cubic property.</param>
        /// <param name="clicks">Initial value of the Clicks property.</param>
        public static CarmodelType CreateCarmodelType(global::System.Int32 carmodelTypeID, global::System.Int32 carmodelID, global::System.Int32 wheelbase, global::System.String cubic, global::System.Int32 clicks)
        {
            CarmodelType carmodelType = new CarmodelType();
            carmodelType.CarmodelTypeID = carmodelTypeID;
            carmodelType.CarmodelID = carmodelID;
            carmodelType.Wheelbase = wheelbase;
            carmodelType.Cubic = cubic;
            carmodelType.Clicks = clicks;
            return carmodelType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarmodelTypeID
        {
            get
            {
                return _CarmodelTypeID;
            }
            set
            {
                if (_CarmodelTypeID != value)
                {
                    OnCarmodelTypeIDChanging(value);
                    ReportPropertyChanging("CarmodelTypeID");
                    _CarmodelTypeID = StructuralObject.SetValidValue(value, "CarmodelTypeID");
                    ReportPropertyChanged("CarmodelTypeID");
                    OnCarmodelTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CarmodelTypeID;
        partial void OnCarmodelTypeIDChanging(global::System.Int32 value);
        partial void OnCarmodelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarmodelID
        {
            get
            {
                return _CarmodelID;
            }
            set
            {
                OnCarmodelIDChanging(value);
                ReportPropertyChanging("CarmodelID");
                _CarmodelID = StructuralObject.SetValidValue(value, "CarmodelID");
                ReportPropertyChanged("CarmodelID");
                OnCarmodelIDChanged();
            }
        }
        private global::System.Int32 _CarmodelID;
        partial void OnCarmodelIDChanging(global::System.Int32 value);
        partial void OnCarmodelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Wheelbase
        {
            get
            {
                return _Wheelbase;
            }
            set
            {
                OnWheelbaseChanging(value);
                ReportPropertyChanging("Wheelbase");
                _Wheelbase = StructuralObject.SetValidValue(value, "Wheelbase");
                ReportPropertyChanged("Wheelbase");
                OnWheelbaseChanged();
            }
        }
        private global::System.Int32 _Wheelbase;
        partial void OnWheelbaseChanging(global::System.Int32 value);
        partial void OnWheelbaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cubic
        {
            get
            {
                return _Cubic;
            }
            set
            {
                OnCubicChanging(value);
                ReportPropertyChanging("Cubic");
                _Cubic = StructuralObject.SetValidValue(value, false, "Cubic");
                ReportPropertyChanged("Cubic");
                OnCubicChanged();
            }
        }
        private global::System.String _Cubic;
        partial void OnCubicChanging(global::System.String value);
        partial void OnCubicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value, "Clicks");
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_CarmodelType_Carmodel", "Carmodel")]
        public Carmodel Carmodel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carmodel>("skabi.data.Models.FK_CarmodelType_Carmodel", "Carmodel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carmodel>("skabi.data.Models.FK_CarmodelType_Carmodel", "Carmodel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carmodel> CarmodelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carmodel>("skabi.data.Models.FK_CarmodelType_Carmodel", "Carmodel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carmodel>("skabi.data.Models.FK_CarmodelType_Carmodel", "Carmodel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_CarmodelTypesProposal_CarmodelType", "CarmodelTypesProposal")]
        public EntityCollection<CarmodelTypesProposal> CarmodelTypesProposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_CarmodelTypesProposal_CarmodelType", "CarmodelTypesProposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_CarmodelTypesProposal_CarmodelType", "CarmodelTypesProposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="CarmodelTypesProposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarmodelTypesProposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarmodelTypesProposal object.
        /// </summary>
        /// <param name="carmodelTypeProposalID">Initial value of the CarmodelTypeProposalID property.</param>
        /// <param name="carmodelTypeID">Initial value of the CarmodelTypeID property.</param>
        /// <param name="proposalID">Initial value of the ProposalID property.</param>
        public static CarmodelTypesProposal CreateCarmodelTypesProposal(global::System.Int32 carmodelTypeProposalID, global::System.Int32 carmodelTypeID, global::System.Int32 proposalID)
        {
            CarmodelTypesProposal carmodelTypesProposal = new CarmodelTypesProposal();
            carmodelTypesProposal.CarmodelTypeProposalID = carmodelTypeProposalID;
            carmodelTypesProposal.CarmodelTypeID = carmodelTypeID;
            carmodelTypesProposal.ProposalID = proposalID;
            return carmodelTypesProposal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarmodelTypeProposalID
        {
            get
            {
                return _CarmodelTypeProposalID;
            }
            set
            {
                if (_CarmodelTypeProposalID != value)
                {
                    OnCarmodelTypeProposalIDChanging(value);
                    ReportPropertyChanging("CarmodelTypeProposalID");
                    _CarmodelTypeProposalID = StructuralObject.SetValidValue(value, "CarmodelTypeProposalID");
                    ReportPropertyChanged("CarmodelTypeProposalID");
                    OnCarmodelTypeProposalIDChanged();
                }
            }
        }
        private global::System.Int32 _CarmodelTypeProposalID;
        partial void OnCarmodelTypeProposalIDChanging(global::System.Int32 value);
        partial void OnCarmodelTypeProposalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarmodelTypeID
        {
            get
            {
                return _CarmodelTypeID;
            }
            set
            {
                if (_CarmodelTypeID != value)
                {
                    OnCarmodelTypeIDChanging(value);
                    ReportPropertyChanging("CarmodelTypeID");
                    _CarmodelTypeID = StructuralObject.SetValidValue(value, "CarmodelTypeID");
                    ReportPropertyChanged("CarmodelTypeID");
                    OnCarmodelTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CarmodelTypeID;
        partial void OnCarmodelTypeIDChanging(global::System.Int32 value);
        partial void OnCarmodelTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProposalID
        {
            get
            {
                return _ProposalID;
            }
            set
            {
                if (_ProposalID != value)
                {
                    OnProposalIDChanging(value);
                    ReportPropertyChanging("ProposalID");
                    _ProposalID = StructuralObject.SetValidValue(value, "ProposalID");
                    ReportPropertyChanged("ProposalID");
                    OnProposalIDChanged();
                }
            }
        }
        private global::System.Int32 _ProposalID;
        partial void OnProposalIDChanging(global::System.Int32 value);
        partial void OnProposalIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_CarmodelTypesProposal_CarmodelType", "CarmodelType")]
        public CarmodelType CarmodelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarmodelType>("skabi.data.Models.FK_CarmodelTypesProposal_CarmodelType", "CarmodelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarmodelType>("skabi.data.Models.FK_CarmodelTypesProposal_CarmodelType", "CarmodelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarmodelType> CarmodelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarmodelType>("skabi.data.Models.FK_CarmodelTypesProposal_CarmodelType", "CarmodelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarmodelType>("skabi.data.Models.FK_CarmodelTypesProposal_CarmodelType", "CarmodelType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_CarmodelTypesProposals_Proposal", "Proposal")]
        public Proposal Proposal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("skabi.data.Models.FK_CarmodelTypesProposals_Proposal", "Proposal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("skabi.data.Models.FK_CarmodelTypesProposals_Proposal", "Proposal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal> ProposalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("skabi.data.Models.FK_CarmodelTypesProposals_Proposal", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal>("skabi.data.Models.FK_CarmodelTypesProposals_Proposal", "Proposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Layout")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Layout : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Layout object.
        /// </summary>
        /// <param name="layoutID">Initial value of the LayoutID property.</param>
        public static Layout CreateLayout(global::System.Int32 layoutID)
        {
            Layout layout = new Layout();
            layout.LayoutID = layoutID;
            return layout;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LayoutID
        {
            get
            {
                return _LayoutID;
            }
            set
            {
                if (_LayoutID != value)
                {
                    OnLayoutIDChanging(value);
                    ReportPropertyChanging("LayoutID");
                    _LayoutID = StructuralObject.SetValidValue(value, "LayoutID");
                    ReportPropertyChanged("LayoutID");
                    OnLayoutIDChanged();
                }
            }
        }
        private global::System.Int32 _LayoutID;
        partial void OnLayoutIDChanging(global::System.Int32 value);
        partial void OnLayoutIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarmodelTypesProposalID
        {
            get
            {
                return _CarmodelTypesProposalID;
            }
            set
            {
                OnCarmodelTypesProposalIDChanging(value);
                ReportPropertyChanging("CarmodelTypesProposalID");
                _CarmodelTypesProposalID = StructuralObject.SetValidValue(value, "CarmodelTypesProposalID");
                ReportPropertyChanged("CarmodelTypesProposalID");
                OnCarmodelTypesProposalIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarmodelTypesProposalID;
        partial void OnCarmodelTypesProposalIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarmodelTypesProposalIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new News object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="text">Initial value of the text property.</param>
        public static News CreateNews(global::System.Int32 id, global::System.String date, global::System.String text)
        {
            News news = new News();
            news.id = id;
            news.date = date;
            news.text = text;
            return news;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                if (_date != value)
                {
                    OndateChanging(value);
                    ReportPropertyChanging("date");
                    _date = StructuralObject.SetValidValue(value, false, "date");
                    ReportPropertyChanged("date");
                    OndateChanged();
                }
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                if (_text != value)
                {
                    OntextChanging(value);
                    ReportPropertyChanging("text");
                    _text = StructuralObject.SetValidValue(value, false, "text");
                    ReportPropertyChanged("text");
                    OntextChanged();
                }
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Proposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Proposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Proposal object.
        /// </summary>
        /// <param name="proposalID">Initial value of the ProposalID property.</param>
        /// <param name="artNr">Initial value of the ArtNr property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="depth">Initial value of the Depth property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="clicks">Initial value of the Clicks property.</param>
        public static Proposal CreateProposal(global::System.Int32 proposalID, global::System.String artNr, global::System.String width, global::System.String height, global::System.String depth, global::System.String weight, global::System.Int32 clicks)
        {
            Proposal proposal = new Proposal();
            proposal.ProposalID = proposalID;
            proposal.ArtNr = artNr;
            proposal.Width = width;
            proposal.Height = height;
            proposal.Depth = depth;
            proposal.Weight = weight;
            proposal.Clicks = clicks;
            return proposal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProposalID
        {
            get
            {
                return _ProposalID;
            }
            set
            {
                if (_ProposalID != value)
                {
                    OnProposalIDChanging(value);
                    ReportPropertyChanging("ProposalID");
                    _ProposalID = StructuralObject.SetValidValue(value, "ProposalID");
                    ReportPropertyChanged("ProposalID");
                    OnProposalIDChanged();
                }
            }
        }
        private global::System.Int32 _ProposalID;
        partial void OnProposalIDChanging(global::System.Int32 value);
        partial void OnProposalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ArtNr
        {
            get
            {
                return _ArtNr;
            }
            set
            {
                OnArtNrChanging(value);
                ReportPropertyChanging("ArtNr");
                _ArtNr = StructuralObject.SetValidValue(value, false, "ArtNr");
                ReportPropertyChanged("ArtNr");
                OnArtNrChanged();
            }
        }
        private global::System.String _ArtNr;
        partial void OnArtNrChanging(global::System.String value);
        partial void OnArtNrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value, false, "Width");
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.String _Width;
        partial void OnWidthChanging(global::System.String value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value, false, "Height");
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.String _Height;
        partial void OnHeightChanging(global::System.String value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Depth
        {
            get
            {
                return _Depth;
            }
            set
            {
                OnDepthChanging(value);
                ReportPropertyChanging("Depth");
                _Depth = StructuralObject.SetValidValue(value, false, "Depth");
                ReportPropertyChanged("Depth");
                OnDepthChanged();
            }
        }
        private global::System.String _Depth;
        partial void OnDepthChanging(global::System.String value);
        partial void OnDepthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value, false, "Weight");
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.String _Weight;
        partial void OnWeightChanging(global::System.String value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value, true, "Price");
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.String _Price;
        partial void OnPriceChanging(global::System.String value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriceInstalled
        {
            get
            {
                return _PriceInstalled;
            }
            set
            {
                OnPriceInstalledChanging(value);
                ReportPropertyChanging("PriceInstalled");
                _PriceInstalled = StructuralObject.SetValidValue(value, true, "PriceInstalled");
                ReportPropertyChanged("PriceInstalled");
                OnPriceInstalledChanged();
            }
        }
        private global::System.String _PriceInstalled;
        partial void OnPriceInstalledChanging(global::System.String value);
        partial void OnPriceInstalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Clicks
        {
            get
            {
                return _Clicks;
            }
            set
            {
                OnClicksChanging(value);
                ReportPropertyChanging("Clicks");
                _Clicks = StructuralObject.SetValidValue(value, "Clicks");
                ReportPropertyChanged("Clicks");
                OnClicksChanged();
            }
        }
        private global::System.Int32 _Clicks;
        partial void OnClicksChanging(global::System.Int32 value);
        partial void OnClicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_CarmodelTypesProposals_Proposal", "CarmodelTypesProposal")]
        public EntityCollection<CarmodelTypesProposal> CarmodelTypesProposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_CarmodelTypesProposals_Proposal", "CarmodelTypesProposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_CarmodelTypesProposals_Proposal", "CarmodelTypesProposal", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
