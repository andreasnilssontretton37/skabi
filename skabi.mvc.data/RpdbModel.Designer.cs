//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_carbrands_carbrands", "Carbrand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Carbrand), "Carbrand1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(skabi.data.Carbrand), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_carmodels_carbrands", "Carbrand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Carbrand), "Carmodel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.Carmodel), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_carmodeltypes_carmodels", "Carmodel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Carmodel), "CarmodelType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.CarmodelType), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_carmodeltypes_proposals_carmodeltypes", "CarmodelType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.CarmodelType), "CarmodelTypesProposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.CarmodelTypesProposal), true)]
[assembly: EdmRelationshipAttribute("skabi.data.Models", "FK_carmodeltypes_proposals_carmodeltypes_proposals", "Proposal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(skabi.data.Proposal), "CarmodelTypesProposal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(skabi.data.CarmodelTypesProposal), true)]

#endregion

namespace skabi.data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class rpdbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new rpdbEntities object using the connection string found in the 'rpdbEntities' section of the application configuration file.
        /// </summary>
        public rpdbEntities() : base("name=rpdbEntities", "rpdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new rpdbEntities object.
        /// </summary>
        public rpdbEntities(string connectionString) : base(connectionString, "rpdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new rpdbEntities object.
        /// </summary>
        public rpdbEntities(EntityConnection connection) : base(connection, "rpdbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carbrand> Carbrands
        {
            get
            {
                if ((_Carbrands == null))
                {
                    _Carbrands = base.CreateObjectSet<Carbrand>("Carbrands");
                }
                return _Carbrands;
            }
        }
        private ObjectSet<Carbrand> _Carbrands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carmodel> Carmodels
        {
            get
            {
                if ((_Carmodels == null))
                {
                    _Carmodels = base.CreateObjectSet<Carmodel>("Carmodels");
                }
                return _Carmodels;
            }
        }
        private ObjectSet<Carmodel> _Carmodels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarmodelType> CarmodelTypes
        {
            get
            {
                if ((_CarmodelTypes == null))
                {
                    _CarmodelTypes = base.CreateObjectSet<CarmodelType>("CarmodelTypes");
                }
                return _CarmodelTypes;
            }
        }
        private ObjectSet<CarmodelType> _CarmodelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarmodelTypesProposal> CarmodelTypesProposals
        {
            get
            {
                if ((_CarmodelTypesProposals == null))
                {
                    _CarmodelTypesProposals = base.CreateObjectSet<CarmodelTypesProposal>("CarmodelTypesProposals");
                }
                return _CarmodelTypesProposals;
            }
        }
        private ObjectSet<CarmodelTypesProposal> _CarmodelTypesProposals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<News> News
        {
            get
            {
                if ((_News == null))
                {
                    _News = base.CreateObjectSet<News>("News");
                }
                return _News;
            }
        }
        private ObjectSet<News> _News;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Proposal> Proposals
        {
            get
            {
                if ((_Proposals == null))
                {
                    _Proposals = base.CreateObjectSet<Proposal>("Proposals");
                }
                return _Proposals;
            }
        }
        private ObjectSet<Proposal> _Proposals;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carbrands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarbrands(Carbrand carbrand)
        {
            base.AddObject("Carbrands", carbrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carmodels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarmodels(Carmodel carmodel)
        {
            base.AddObject("Carmodels", carmodel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarmodelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarmodelTypes(CarmodelType carmodelType)
        {
            base.AddObject("CarmodelTypes", carmodelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarmodelTypesProposals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarmodelTypesProposals(CarmodelTypesProposal carmodelTypesProposal)
        {
            base.AddObject("CarmodelTypesProposals", carmodelTypesProposal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the News EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNews(News news)
        {
            base.AddObject("News", news);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Proposals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProposals(Proposal proposal)
        {
            base.AddObject("Proposals", proposal);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Carbrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carbrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carbrand object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="brand_name">Initial value of the brand_name property.</param>
        /// <param name="brandclicks">Initial value of the brandclicks property.</param>
        public static Carbrand CreateCarbrand(global::System.Int32 id, global::System.String brand_name, global::System.Int32 brandclicks)
        {
            Carbrand carbrand = new Carbrand();
            carbrand.id = id;
            carbrand.brand_name = brand_name;
            carbrand.brandclicks = brandclicks;
            return carbrand;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String brand_name
        {
            get
            {
                return _brand_name;
            }
            set
            {
                Onbrand_nameChanging(value);
                ReportPropertyChanging("brand_name");
                _brand_name = StructuralObject.SetValidValue(value, false, "brand_name");
                ReportPropertyChanged("brand_name");
                Onbrand_nameChanged();
            }
        }
        private global::System.String _brand_name;
        partial void Onbrand_nameChanging(global::System.String value);
        partial void Onbrand_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 brandclicks
        {
            get
            {
                return _brandclicks;
            }
            set
            {
                OnbrandclicksChanging(value);
                ReportPropertyChanging("brandclicks");
                _brandclicks = StructuralObject.SetValidValue(value, "brandclicks");
                ReportPropertyChanged("brandclicks");
                OnbrandclicksChanged();
            }
        }
        private global::System.Int32 _brandclicks;
        partial void OnbrandclicksChanging(global::System.Int32 value);
        partial void OnbrandclicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carbrands_carbrands", "Carbrand1")]
        public Carbrand Carbrands1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carbrand> Carbrands1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carbrands_carbrands", "Carbrand")]
        public Carbrand Carbrand1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carbrand> Carbrand1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carbrand>("skabi.data.Models.FK_carbrands_carbrands", "Carbrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodels_carbrands", "Carmodel")]
        public EntityCollection<Carmodel> Carmodels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carmodel>("skabi.data.Models.FK_carmodels_carbrands", "Carmodel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carmodel>("skabi.data.Models.FK_carmodels_carbrands", "Carmodel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Carmodel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carmodel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carmodel object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="carbrand_id">Initial value of the carbrand_id property.</param>
        /// <param name="model_name">Initial value of the model_name property.</param>
        /// <param name="modelclicks">Initial value of the modelclicks property.</param>
        public static Carmodel CreateCarmodel(global::System.Int32 id, global::System.Int32 carbrand_id, global::System.String model_name, global::System.Int32 modelclicks)
        {
            Carmodel carmodel = new Carmodel();
            carmodel.id = id;
            carmodel.carbrand_id = carbrand_id;
            carmodel.model_name = model_name;
            carmodel.modelclicks = modelclicks;
            return carmodel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 carbrand_id
        {
            get
            {
                return _carbrand_id;
            }
            set
            {
                Oncarbrand_idChanging(value);
                ReportPropertyChanging("carbrand_id");
                _carbrand_id = StructuralObject.SetValidValue(value, "carbrand_id");
                ReportPropertyChanged("carbrand_id");
                Oncarbrand_idChanged();
            }
        }
        private global::System.Int32 _carbrand_id;
        partial void Oncarbrand_idChanging(global::System.Int32 value);
        partial void Oncarbrand_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String model_name
        {
            get
            {
                return _model_name;
            }
            set
            {
                Onmodel_nameChanging(value);
                ReportPropertyChanging("model_name");
                _model_name = StructuralObject.SetValidValue(value, false, "model_name");
                ReportPropertyChanged("model_name");
                Onmodel_nameChanged();
            }
        }
        private global::System.String _model_name;
        partial void Onmodel_nameChanging(global::System.String value);
        partial void Onmodel_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 modelclicks
        {
            get
            {
                return _modelclicks;
            }
            set
            {
                OnmodelclicksChanging(value);
                ReportPropertyChanging("modelclicks");
                _modelclicks = StructuralObject.SetValidValue(value, "modelclicks");
                ReportPropertyChanged("modelclicks");
                OnmodelclicksChanged();
            }
        }
        private global::System.Int32 _modelclicks;
        partial void OnmodelclicksChanging(global::System.Int32 value);
        partial void OnmodelclicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodels_carbrands", "Carbrand")]
        public Carbrand Carbrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carmodels_carbrands", "Carbrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carmodels_carbrands", "Carbrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carbrand> CarbrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carbrand>("skabi.data.Models.FK_carmodels_carbrands", "Carbrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carbrand>("skabi.data.Models.FK_carmodels_carbrands", "Carbrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodeltypes_carmodels", "CarmodelType")]
        public EntityCollection<CarmodelType> CarmodelTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarmodelType>("skabi.data.Models.FK_carmodeltypes_carmodels", "CarmodelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarmodelType>("skabi.data.Models.FK_carmodeltypes_carmodels", "CarmodelType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="CarmodelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarmodelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarmodelType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="carmodel_id">Initial value of the carmodel_id property.</param>
        /// <param name="wheelbase">Initial value of the wheelbase property.</param>
        /// <param name="cubic">Initial value of the cubic property.</param>
        /// <param name="typeclicks">Initial value of the typeclicks property.</param>
        public static CarmodelType CreateCarmodelType(global::System.Int32 id, global::System.Int32 carmodel_id, global::System.Int32 wheelbase, global::System.String cubic, global::System.Int32 typeclicks)
        {
            CarmodelType carmodelType = new CarmodelType();
            carmodelType.id = id;
            carmodelType.carmodel_id = carmodel_id;
            carmodelType.wheelbase = wheelbase;
            carmodelType.cubic = cubic;
            carmodelType.typeclicks = typeclicks;
            return carmodelType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 carmodel_id
        {
            get
            {
                return _carmodel_id;
            }
            set
            {
                Oncarmodel_idChanging(value);
                ReportPropertyChanging("carmodel_id");
                _carmodel_id = StructuralObject.SetValidValue(value, "carmodel_id");
                ReportPropertyChanged("carmodel_id");
                Oncarmodel_idChanged();
            }
        }
        private global::System.Int32 _carmodel_id;
        partial void Oncarmodel_idChanging(global::System.Int32 value);
        partial void Oncarmodel_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 wheelbase
        {
            get
            {
                return _wheelbase;
            }
            set
            {
                OnwheelbaseChanging(value);
                ReportPropertyChanging("wheelbase");
                _wheelbase = StructuralObject.SetValidValue(value, "wheelbase");
                ReportPropertyChanged("wheelbase");
                OnwheelbaseChanged();
            }
        }
        private global::System.Int32 _wheelbase;
        partial void OnwheelbaseChanging(global::System.Int32 value);
        partial void OnwheelbaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cubic
        {
            get
            {
                return _cubic;
            }
            set
            {
                OncubicChanging(value);
                ReportPropertyChanging("cubic");
                _cubic = StructuralObject.SetValidValue(value, false, "cubic");
                ReportPropertyChanged("cubic");
                OncubicChanged();
            }
        }
        private global::System.String _cubic;
        partial void OncubicChanging(global::System.String value);
        partial void OncubicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 typeclicks
        {
            get
            {
                return _typeclicks;
            }
            set
            {
                OntypeclicksChanging(value);
                ReportPropertyChanging("typeclicks");
                _typeclicks = StructuralObject.SetValidValue(value, "typeclicks");
                ReportPropertyChanged("typeclicks");
                OntypeclicksChanged();
            }
        }
        private global::System.Int32 _typeclicks;
        partial void OntypeclicksChanging(global::System.Int32 value);
        partial void OntypeclicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodeltypes_carmodels", "Carmodel")]
        public Carmodel Carmodel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carmodel>("skabi.data.Models.FK_carmodeltypes_carmodels", "Carmodel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carmodel>("skabi.data.Models.FK_carmodeltypes_carmodels", "Carmodel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carmodel> CarmodelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carmodel>("skabi.data.Models.FK_carmodeltypes_carmodels", "Carmodel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carmodel>("skabi.data.Models.FK_carmodeltypes_carmodels", "Carmodel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodeltypes_proposals_carmodeltypes", "CarmodelTypesProposal")]
        public EntityCollection<CarmodelTypesProposal> CarmodelTypesProposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes", "CarmodelTypesProposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes", "CarmodelTypesProposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="CarmodelTypesProposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarmodelTypesProposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarmodelTypesProposal object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="carmodeltype_id">Initial value of the carmodeltype_id property.</param>
        /// <param name="proposal_id">Initial value of the proposal_id property.</param>
        /// <param name="left_right">Initial value of the left_right property.</param>
        /// <param name="uniqueclicks">Initial value of the uniqueclicks property.</param>
        /// <param name="order_id">Initial value of the order_id property.</param>
        public static CarmodelTypesProposal CreateCarmodelTypesProposal(global::System.Int32 id, global::System.Int32 carmodeltype_id, global::System.Int32 proposal_id, global::System.Int32 left_right, global::System.Int32 uniqueclicks, global::System.Int32 order_id)
        {
            CarmodelTypesProposal carmodelTypesProposal = new CarmodelTypesProposal();
            carmodelTypesProposal.id = id;
            carmodelTypesProposal.carmodeltype_id = carmodeltype_id;
            carmodelTypesProposal.proposal_id = proposal_id;
            carmodelTypesProposal.left_right = left_right;
            carmodelTypesProposal.uniqueclicks = uniqueclicks;
            carmodelTypesProposal.order_id = order_id;
            return carmodelTypesProposal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 carmodeltype_id
        {
            get
            {
                return _carmodeltype_id;
            }
            set
            {
                Oncarmodeltype_idChanging(value);
                ReportPropertyChanging("carmodeltype_id");
                _carmodeltype_id = StructuralObject.SetValidValue(value, "carmodeltype_id");
                ReportPropertyChanged("carmodeltype_id");
                Oncarmodeltype_idChanged();
            }
        }
        private global::System.Int32 _carmodeltype_id;
        partial void Oncarmodeltype_idChanging(global::System.Int32 value);
        partial void Oncarmodeltype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 proposal_id
        {
            get
            {
                return _proposal_id;
            }
            set
            {
                Onproposal_idChanging(value);
                ReportPropertyChanging("proposal_id");
                _proposal_id = StructuralObject.SetValidValue(value, "proposal_id");
                ReportPropertyChanged("proposal_id");
                Onproposal_idChanged();
            }
        }
        private global::System.Int32 _proposal_id;
        partial void Onproposal_idChanging(global::System.Int32 value);
        partial void Onproposal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 left_right
        {
            get
            {
                return _left_right;
            }
            set
            {
                Onleft_rightChanging(value);
                ReportPropertyChanging("left_right");
                _left_right = StructuralObject.SetValidValue(value, "left_right");
                ReportPropertyChanged("left_right");
                Onleft_rightChanged();
            }
        }
        private global::System.Int32 _left_right;
        partial void Onleft_rightChanging(global::System.Int32 value);
        partial void Onleft_rightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uniqueclicks
        {
            get
            {
                return _uniqueclicks;
            }
            set
            {
                OnuniqueclicksChanging(value);
                ReportPropertyChanging("uniqueclicks");
                _uniqueclicks = StructuralObject.SetValidValue(value, "uniqueclicks");
                ReportPropertyChanged("uniqueclicks");
                OnuniqueclicksChanged();
            }
        }
        private global::System.Int32 _uniqueclicks;
        partial void OnuniqueclicksChanging(global::System.Int32 value);
        partial void OnuniqueclicksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 order_id
        {
            get
            {
                return _order_id;
            }
            set
            {
                Onorder_idChanging(value);
                ReportPropertyChanging("order_id");
                _order_id = StructuralObject.SetValidValue(value, "order_id");
                ReportPropertyChanged("order_id");
                Onorder_idChanged();
            }
        }
        private global::System.Int32 _order_id;
        partial void Onorder_idChanging(global::System.Int32 value);
        partial void Onorder_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodeltypes_proposals_carmodeltypes", "CarmodelType")]
        public CarmodelType CarmodelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarmodelType>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes", "CarmodelType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarmodelType>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes", "CarmodelType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarmodelType> CarmodelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarmodelType>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes", "CarmodelType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarmodelType>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes", "CarmodelType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodeltypes_proposals_carmodeltypes_proposals", "Proposal")]
        public Proposal Proposal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes_proposals", "Proposal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes_proposals", "Proposal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Proposal> ProposalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Proposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes_proposals", "Proposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Proposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes_proposals", "Proposal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="News")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class News : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new News object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="text">Initial value of the text property.</param>
        public static News CreateNews(global::System.Int32 id, global::System.String date, global::System.String text)
        {
            News news = new News();
            news.id = id;
            news.date = date;
            news.text = text;
            return news;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                if (_date != value)
                {
                    OndateChanging(value);
                    ReportPropertyChanging("date");
                    _date = StructuralObject.SetValidValue(value, false, "date");
                    ReportPropertyChanged("date");
                    OndateChanged();
                }
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                if (_text != value)
                {
                    OntextChanging(value);
                    ReportPropertyChanging("text");
                    _text = StructuralObject.SetValidValue(value, false, "text");
                    ReportPropertyChanged("text");
                    OntextChanged();
                }
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="skabi.data.Models", Name="Proposal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Proposal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Proposal object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="art_nr">Initial value of the art_nr property.</param>
        /// <param name="width">Initial value of the width property.</param>
        /// <param name="height">Initial value of the height property.</param>
        /// <param name="depth">Initial value of the depth property.</param>
        /// <param name="weight">Initial value of the weight property.</param>
        /// <param name="proposalclicks">Initial value of the proposalclicks property.</param>
        public static Proposal CreateProposal(global::System.Int32 id, global::System.String art_nr, global::System.String width, global::System.String height, global::System.String depth, global::System.String weight, global::System.Int32 proposalclicks)
        {
            Proposal proposal = new Proposal();
            proposal.id = id;
            proposal.art_nr = art_nr;
            proposal.width = width;
            proposal.height = height;
            proposal.depth = depth;
            proposal.weight = weight;
            proposal.proposalclicks = proposalclicks;
            return proposal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String art_nr
        {
            get
            {
                return _art_nr;
            }
            set
            {
                Onart_nrChanging(value);
                ReportPropertyChanging("art_nr");
                _art_nr = StructuralObject.SetValidValue(value, false, "art_nr");
                ReportPropertyChanged("art_nr");
                Onart_nrChanged();
            }
        }
        private global::System.String _art_nr;
        partial void Onart_nrChanging(global::System.String value);
        partial void Onart_nrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String width
        {
            get
            {
                return _width;
            }
            set
            {
                OnwidthChanging(value);
                ReportPropertyChanging("width");
                _width = StructuralObject.SetValidValue(value, false, "width");
                ReportPropertyChanged("width");
                OnwidthChanged();
            }
        }
        private global::System.String _width;
        partial void OnwidthChanging(global::System.String value);
        partial void OnwidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String height
        {
            get
            {
                return _height;
            }
            set
            {
                OnheightChanging(value);
                ReportPropertyChanging("height");
                _height = StructuralObject.SetValidValue(value, false, "height");
                ReportPropertyChanged("height");
                OnheightChanged();
            }
        }
        private global::System.String _height;
        partial void OnheightChanging(global::System.String value);
        partial void OnheightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String depth
        {
            get
            {
                return _depth;
            }
            set
            {
                OndepthChanging(value);
                ReportPropertyChanging("depth");
                _depth = StructuralObject.SetValidValue(value, false, "depth");
                ReportPropertyChanged("depth");
                OndepthChanged();
            }
        }
        private global::System.String _depth;
        partial void OndepthChanging(global::System.String value);
        partial void OndepthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String weight
        {
            get
            {
                return _weight;
            }
            set
            {
                OnweightChanging(value);
                ReportPropertyChanging("weight");
                _weight = StructuralObject.SetValidValue(value, false, "weight");
                ReportPropertyChanged("weight");
                OnweightChanged();
            }
        }
        private global::System.String _weight;
        partial void OnweightChanging(global::System.String value);
        partial void OnweightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value, true, "price");
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.String _price;
        partial void OnpriceChanging(global::System.String value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String price_installed
        {
            get
            {
                return _price_installed;
            }
            set
            {
                Onprice_installedChanging(value);
                ReportPropertyChanging("price_installed");
                _price_installed = StructuralObject.SetValidValue(value, true, "price_installed");
                ReportPropertyChanged("price_installed");
                Onprice_installedChanged();
            }
        }
        private global::System.String _price_installed;
        partial void Onprice_installedChanging(global::System.String value);
        partial void Onprice_installedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 proposalclicks
        {
            get
            {
                return _proposalclicks;
            }
            set
            {
                OnproposalclicksChanging(value);
                ReportPropertyChanging("proposalclicks");
                _proposalclicks = StructuralObject.SetValidValue(value, "proposalclicks");
                ReportPropertyChanged("proposalclicks");
                OnproposalclicksChanged();
            }
        }
        private global::System.Int32 _proposalclicks;
        partial void OnproposalclicksChanging(global::System.Int32 value);
        partial void OnproposalclicksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("skabi.data.Models", "FK_carmodeltypes_proposals_carmodeltypes_proposals", "CarmodelTypesProposal")]
        public EntityCollection<CarmodelTypesProposal> CarmodelTypesProposals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes_proposals", "CarmodelTypesProposal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarmodelTypesProposal>("skabi.data.Models.FK_carmodeltypes_proposals_carmodeltypes_proposals", "CarmodelTypesProposal", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
